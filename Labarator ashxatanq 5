#include <iostream>
#include <vector>
#include <string>
using namespace std;


class MatrixEncoder {
private:
    vector<vector<char>> matrix;  
    string sentence; 
    int rows;  

public:
    // Constructor
    MatrixEncoder(const string& inputSentence, int numRows) : sentence(inputSentence), rows(numRows) {
        createMatrix();
    }

    // funkcia matric sarqelu
    void createMatrix() {
        int len = sentence.length();  
        int cols = (len + rows - 1) / rows; 
        matrix = vector<vector<char>>(rows, vector<char>(cols, ' ')); 
        int index = 0;  
        for (int j = 0; j < cols && index < len; ++j) {
            for (int i = 0; i < rows && index < len; ++i) {
                matrix[i][j] = sentence[index++];  
                }
        }
    }

    //matricy cucadrelu funkcia
    void displayMatrix() {
        for (const vector<char>& row : matrix) {
            for (char elem : row) {
                cout << elem << " ";
            }
            cout << endl;  
        }
    }

   //matricov kodavorac naxadasutyun stanal
    string encodeSentence() {
        string encoded;  
        for (const vector<char>& row : matrix) {
            for (char elem : row) {
                encoded += elem;  
            }
        }
        return encoded;  
    }
};

int main() {
    string sentence;  
    int rows;  

    cout << "Naxadasutyun: ";
    getline(cin, sentence);
    cout << "Enter i: ";
    cin >> rows;
    MatrixEncoder encoder(sentence, rows);
    cout << "Matrix:"<<endl;
    encoder.displayMatrix();
    string encodedSentence = encoder.encodeSentence();
    cout << "Kodavorvac naxadasutyun:" << encodedSentence << " " << endl;

    return 0;  
}
